// Copyright (c) 2017, pubspec_dart authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

import 'dart:io';

import 'package:args/args.dart';
import 'package:path/path.dart' as p;
import 'package:yaml/yaml.dart';

void main(List<String> args) {
  final parsedArgs = _argParser.parse(args);
  final pubspecPath = p.join(parsedArgs['path'], 'pubspec.yaml');
  final outputFile = parsedArgs['output'];

  final pubspec = loadYaml(new File(pubspecPath).readAsStringSync());
  new File(outputFile).writeAsStringSync(''
      '// Automatically generated by package:pubspec_dart\n'
      '// Can be regenerated by running `pub global run pubspec_dart:build\n'
      '\n'
      '/// Name of this package.\n'
      'const name = \'${pubspec['name']}\';\n'
      '\n'
      '/// Version of "package:${pubspec['name']}".\n'
      'const version = \'${pubspec['version']}\';\n');
  print('Wrote $outputFile');
}

final _argParser = new ArgParser()
  ..addOption(
    'output',
    abbr: 'o',
    defaultsTo: p.join(p.current, 'lib', 'src', 'pubspec.dart'),
    valueHelp: 'A .dart file to inline the pub version into',
  )
  ..addOption(
    'path',
    abbr: 'p',
    defaultsTo: p.current,
    valueHelp: 'A package with a pubspec.yaml',
  );
